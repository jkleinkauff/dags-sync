apiVersion: "sparkoperator.k8s.io/v1beta2"
kind: SparkApplication
metadata:
  name: "dag-example-spark-{{ macros.datetime.now().strftime("%Y-%m-%d-%H-%M-%S") }}-{{ task_instance.try_number }}"
  namespace: airflow
spec:
  timeToLiveSeconds: 900
  sparkConf:
    # spark.jars.packages: "org.apache.hadoop:hadoop-aws:3.2.2,com.amazonaws:aws-java-sdk-bundle:1.11.563"
    # spark.jars.packages: "software.amazon.awssdk:bundle:2.17.288,software.amazon.awssdk:url-connection-client:2.17.288,com.amazonaws:aws-java-sdk-bundle:1.12.319,org.apache.hadoop:hadoop-aws:3.2.0"
    spark.jars.ivy: /tmp/.ivy
    spark.driver.extraJavaOptions: "-Divy.cache.dir=/tmp -Divy.home=/tmp"
    spark.kubernetes.local.dirs.tmpfs: "true"
    spark.kubernetes.file.upload.path: "/opt/spark/work-dir"
    # spark.hadoop.fs.s3a.impl: org.apache.hadoop.fs.s3a.S3AFileSystem
  # hadoopConf:
    # fs.s3a.impl: org.apache.hadoop.fs.s3a.S3AFileSystem
  type: Python
  pythonVersion: "3"
  mode: cluster
  image: "kleinkauff/spark-custom"
  mainClass: org.apache.spark.examples.SparkPi
  imagePullPolicy: IfNotPresent #Always #IfNotPresent
  mainApplicationFile: local:///opt/spark/work-dir/my-spark-job.py
  #local:///opt/spark/work-dir/my-spark-job.py #local:///opt/spark/examples/src/main/python/pi.py
  sparkVersion: "3.2.2"
  restartPolicy:
    type: Never
  driver:
    envSecretKeyRefs:
      AWS_ACCESS_KEY_ID:
        name: aws
        key: AWS_ACCESS_KEY
      AWS_SECRET_ACCESS_KEY:
        name: aws
        key: AWS_SECRET_ACCESS_KEY
    cores: 1
    coreLimit: "1200m"
    memory: "4g"
    labels:
      version: 3.2.2
    serviceAccount: spark-operator
    # envVars:
      # AWS_ACCESS_KEY: "@AWS_ACCESS_KEY"
      # AWS_SECRET_ACCESS_KEY: "@AWS_SECRET_ACCESS_KEY"
  executor:
    cores: 1
    instances: 2
    memory: "475M"
    labels:
      version: 3.2.2
    serviceAccount: spark-operator